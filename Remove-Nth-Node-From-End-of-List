19. Remove Nth Node From End of List
//C++

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode dummy(0);
        dummy.next= head;
        ListNode* temp = head;
        int size = 0;
        while(temp != nullptr){
            size ++; 
            temp = temp->next;
        }
        if(n == size){
            dummy.next = head->next;
            delete head;
            return dummy.next;
        }
        if(n > size)return head;
        int position = size - n;
        temp = head;
        int count = 1;
        while(temp != nullptr && count != position){
            temp = temp->next;
            count++; 
        }
        ListNode* temp2 = temp->next;
        temp->next = temp2->next;
        delete temp2;
        return dummy.next;
    }
};
